spring:
  # 必须把 name 属性从 application.yml 迁移过来，否则无法动态刷新
  application:
    name: coupon-calculation-serv
  cloud:
    nacos:
      # nacos 服务器的地址
      server-addr: 192.168.31.112:8848
      username: nacos
      password: nacos112
      config:
        file-extension: yml
        # prefix: 文件名前缀，默认是spring.application.name
        # 如果没有指定命令空间，则默认命令空间为PUBLIC
        namespace: dev
        # 如果没有配置 Group，则默认值为 DEFAULT_GROUP
        group: DEFAULT_GROUP
        # 从Nacos读取配置项的超时时间
        timeout: 5000
        # 长轮询超时时间
        config-long-poll-timeout: 10000
        # 轮询的重试时间
        config-retry-time: 2000
        # 长轮询最大重试次数
        max-retry: 3
        # 开启监听和自动刷新
        refresh-enabled: true
        # Nacos 的共享配置项，数字越大优先级越高
        shared-configs:
#          - dataId: redis-config.yml
#            group: EXT_GROUP
#            refresh: true
#          - dataId: rabbitmq-config.yml
#            group: EXT_GROUP
#            refresh: true
        # Nacos 的扩展配置项，优先级大于 shared-configs
        extension-configs:

      discovery:
        # service: # 服务注册到 Nacos 上的名称，一般不用配置
        # nacos客户端向服务端发送心跳的时间间隔，时间单位其实是ms
        heart-beat-interval: 5000
        # 服务端没有接受到客户端心跳请求就将其设为不健康的时间间隔，默认为15s
        # 注：推荐值该值为15s即可，如果有的业务线希望服务下线或者出故障时希望尽快被发现，可以适当减少该值
        heart-beat-timeout: 20000
        # 元数据部分 - 可以自己随便定制
        metadata:
          mydata: abc
        # 客户端在启动时是否读取本地配置项(一个文件)来获取服务列表
        # 注：推荐该值为 false，若改成 true。则客户端会在本地的一个文件中保存服务信息，当下次宕机启动时，会优先读取本地的配置对外提供服务。
        naming-load-cache-at-start: false
        # 命名空间ID，Nacos 通过不同的命名空间来区分不同的环境，进行数据隔离，
        namespace: dev
        # 创建不同的集群
        cluster-name: Cluster-A
        # [注意]两个服务如果存在上下游调用关系，必须配置相同的 group 才能发起访问
        group: myGroup
        # 向注册中心注册服务，默认为 true
        # 如果只消费服务，不作为服务提供方，倒是可以设置成 false，减少开销
        register-enabled: true
        # 类似长连接监听服务端信息变化的功能
        watch:
          enabled: true
        watch-delay: 30000